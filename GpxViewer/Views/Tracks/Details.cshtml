@model GpxViewer.ViewModels.TrackDetailViewModel

<div class="page-header color">
    <h1>@Model.Track.Name</h1>
</div>

<div class="row-fluid">
    <div class="span6">
        <dl class="dl-horizontal">
            @if (!string.IsNullOrEmpty(Model.Track.Description))
            {
                <dt>
                    <strong>Description:</strong>
                </dt>
                <dd>
                    @Model.Track.Description
                </dd>
                <br />
            }
            <dt>
                <strong>File name:</strong>
            </dt>
            <dd>
                @Model.Track.FileName
            </dd>
            <dt>
                <strong>Content type:</strong>
            </dt>
            <dd>
                @Model.Track.FileContentType
            </dd>
            <dt>
                <strong>File size:</strong>
            </dt>
            <dd>
                @Model.Track.FileSize
            </dd>
            <dt>
                <strong>File updated at:</strong>
            </dt>
            <dd>
                @Model.Track.FileUpdatedAt
            </dd>
        </dl>
        @if (Model.Distance > 0)
        {
            <br />
            <dl class="dl-horizontal">
                <dt>
                    <strong>Distance:</strong>
                </dt>
                <dd>
                    @Model.Distance miles
                </dd>
            </dl>
        }
        @if (Model.ElevationProfile != null)
        {
            <dl class="dl-horizontal">
                <dt>
                    <strong>Elevation Gain:</strong>
                </dt>
                <dd>
                    @Model.ElevationProfile.Gain ft
                </dd>
                <dt>
                    <strong>Elevation Loss:</strong>
                </dt>
                <dd>
                    @Model.ElevationProfile.Loss ft
                </dd>
                <dt>
                    <strong>Min Elevation:</strong>
                </dt>
                <dd>
                    @Model.ElevationProfile.MinElevation ft
                </dd>
                <dt>
                    <strong>Max Elevation:</strong>
                </dt>
                <dd>
                    @Model.ElevationProfile.MaxElevation ft
                </dd>
            </dl>
        }
        <div class="form-actions">
            @Html.ActionLink("Back", "Index", "Tracks", null, new { @class = "btn" })
            @* @Html.ActionLink("Delete", "Delete", "Tracks", new { id = Model.Track.TrackId }, new { @class = "btn btn-danger" })*@
        </div>
    </div>
<div class="span6">
    <div id="map_canvas" style="height: 500px;"></div>
</div>
</div>



<h2>Points</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Latitude</th>
            <th>Longitude</th>
            <th>Elevation</th>
            <th>Time</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var point in Model.Track.TrackSegments.SelectMany(trackSegment => trackSegment.Points))
        {
            <tr>
                <td>@point.PointId</td>
                <td>@point.Latitude</td>
                <td>@point.Longitude</td>
                <td>@point.Elevation</td>
                <td>@point.PointCreatedAt</td>
            </tr>
        }

    </tbody>
</table>

@section scripts
{
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBHyd80Vb2I1rUaqH5cZb3lRxy8thve_GM&libraries=geometry&sensor=false"></script>
    <script type="text/javascript">
        var map;

        $(document).ready(function () {
            var gmCenter = new google.maps.LatLng(33.7489, -84.3881);
            var gmMapType = google.maps.MapTypeId.ROADMAP;
            var mapOptions = { center: gmCenter, zoom: 3, mapTypeId: gmMapType };
            map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
            displayOnMap();
        });

        function displayOnMap() {
            var decodedPath = google.maps.geometry.encoding.decodePath('@Model.Polyline');
            var pathOptions = { path: decodedPath, strokeColor: "#FF0000", strokeOpacity: 0.5, strokeWeight: 5 };
            var trackPath = new google.maps.Polyline(pathOptions);
            trackPath.setMap(map);
            map.fitBounds(calcBounds(trackPath));
           
        }

        function calcBounds(trackPath) {
            var b = new google.maps.LatLngBounds();
            var gmPath = trackPath.getPath();
            var pathLength = gmPath.getLength();
            var i = [0, (pathLength / 3).toFixed(0), (pathLength / 3).toFixed(0) * 2];
            b.extend(gmPath.getAt(i[0]));
            b.extend(gmPath.getAt(i[1]));
            b.extend(gmPath.getAt(i[2]));
            return b;
        }



    </script>
}
